name: artifacts-manual

# NOTE:
#  For this action to be triggered (if using the release-tag workflow)
#  you will need to ensure that the release-tag workflow is using a custom token
#  that has permission to start workflows.
#  See: https://docs.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
on: 
  workflow_dispatch:
    inputs:
      upload_url:
        description: 'the release url to attach artifacts to (look in the release workflow logs)'
        required: true
        default: 'https://uploads.github.com/repos/AndrewNeudegg/delta/releases/35915180/assets{?name,label}'
      tag_name:
        description: 'the tag to push the docker image as'
        required: true
        default: 'v0.0.1'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go

      - name: Configure
        run: mkdir -p ${{ github.workspace }}/artifacts/binaries

      - name: Build delta-darwin-amd64
        run: GOARCH=amd64 GOOS=darwin CGO_ENABLED=0 go build -o ${{ github.workspace }}/artifacts/binaries/delta-darwin-amd64 -v ./cmd/delta
      - name: Build delta-linux-amd64
        run: GOARCH=amd64 GOOS=linux CGO_ENABLED=0 go build -o ${{ github.workspace }}/artifacts/binaries/delta-linux-amd64 -v ./cmd/delta
      - name: Build delta-windows-amd64
        run: GOARCH=amd64 GOOS=windows CGO_ENABLED=0 go build -o ${{ github.workspace }}/artifacts/binaries/delta-windows-amd64.exe -v ./cmd/delta

      - uses: shogo82148/actions-upload-release-asset@v1.2.4
        with:
          upload_url: ${{ github.event.inputs.upload_url }}
          asset_path: ${{ github.workspace }}/artifacts/binaries/delta-darwin-amd64
      - uses: shogo82148/actions-upload-release-asset@v1.2.4
        with:
          upload_url: ${{ github.event.inputs.upload_url }}
          asset_path: ${{ github.workspace }}/artifacts/binaries/delta-linux-amd64
      - uses: shogo82148/actions-upload-release-asset@v1.2.4
        with:
          upload_url: ${{ github.event.inputs.upload_url }}
          asset_path: ${{ github.workspace }}/artifacts/binaries/delta-windows-amd64.exe

      - name: Publish to Dockerhub
        uses: elgohr/Publish-Docker-Github-Action@3.02
        with:
          name: andrewneudegg/delta
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          # https://developer.github.com/v3/repos/releases/#get-a-release
          tags: "latest,${{ github.event.inputs.tag_name }}"
